## HTTPS redirect ##
server {
  listen      80;
  
  # redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
  return 301 https://saber.solversion.com$request_uri;
}

## Ember front-end ##
server {
  listen      443 default_server ssl http2; # managed by Certbot
  server_name saber.solversion.com;
  root        /var/www/saber-staging/ember;
  index       index.html;

  # log files
  access_log  /var/log/nginx/saber-staging-ember.access.log;
  error_log   /var/log/nginx/saber-staging-ember.error.log;

  # ssl files
  ssl_certificate /etc/letsencrypt/live/saber.solversion.com/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/saber.solversion.com/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

  # proxy buffers
  proxy_buffers 16 64k;
  proxy_buffer_size 128k;

  location /nginx_status {
    # Turn on nginx stats
    stub_status on;

    # I do not need logs for stats
    access_log   off;

    # Security: Only allow access from 192.168.1.100 IP #
    #allow 192.168.1.100;

    # Send rest of the world to /dev/null #
    #deny all;
  }

  ## default location ##
  location / {
    try_files $uri $uri/ /index.html?/$request_uri;
  }
}

## Passenger hosted Rails API ##
server {
  listen 443 ssl http2; # managed by Certbot
  server_name api.saber.solversion.com;
  
  # API public folder
  root /var/www/saber-staging/api/public;
  
  # set client body size to 10M
  client_max_body_size 10M;

  # Passenger
  passenger_enabled on;
  passenger_app_env staging;
  passenger_ruby /home/webadmin/.rbenv/versions/2.5.3/bin/ruby;
  passenger_friendly_error_pages on;
  
  # log files
  access_log  /var/log/nginx/saber-staging-api.access.log;
  error_log   /var/log/nginx/saber-staging-api.error.log;

  # ssl
  ssl_certificate /etc/letsencrypt/live/api.saber.solversion.com/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/api.saber.solversion.com/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
  
  include /etc/nginx/security_headers.conf;
  include /etc/nginx/cors_headers.conf;
  
  location / {
    
    include /etc/nginx/security_headers.conf;
    include /etc/nginx/cors_headers.conf;
    
    if ($request_method = 'OPTIONS') {
      # security headers
      # HSTS/Strict Transport Security 
      add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

      # deny use of our sites inside a frame to prevent clickjacking
      add_header X-Frame-Options SAMEORIGIN always;

      # cross-site scripting XSS filter
      add_header X-XSS-Protection "1; mode=block" always;

      # block referrers
      add_header Referrer-Policy "no-referrer" always;
      
      #CORS headers 
      add_header 'Access-Control-Allow-Origin' 'https://saber.solversion.com';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
      add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Content-Type' 'text/plain charset=UTF-8';
      add_header 'Content-Length' 0;
      return 204;
    }
  }
}

## node.js Chat Server ##
server {
  listen 443 ssl http2; # managed by Certbot
  server_name chat.saber.solversion.com;

  # log files
  access_log  /var/log/nginx/saber-staging-chat.access.log;
  error_log   /var/log/nginx/saber-staging-chat.error.log;

  # ssl
  ssl_certificate /etc/letsencrypt/live/chat.saber.solversion.com/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/chat.saber.solversion.com/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    
  location / {
    proxy_pass   http://127.0.0.1:7000;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-NginX-Proxy true;
    proxy_redirect off; 
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_hide_header X-Powered-By;
  }
}